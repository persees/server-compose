version: "3.8"

services:
  mysql:
    image: mysql:latest
    container_name: mysqlContainer
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: public
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-initdb:/docker-entrypoint-initdb.d

  postgres:
    image: postgres:latest
    container_name: postgresContainer
    restart: always
    environment:
      POSTGRES_DB: public
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-initdb:/docker-entrypoint-initdb.d

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssqlContainer
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "StrongPassword123!"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P StrongPassword123! -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    container_name: mssqlContainerConfiguration
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./mssql-initdb:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: /bin/bash -c '/opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P StrongPassword123! -i docker-entrypoint-initdb.d/init.sql; echo "All done!";'

volumes:
  mysql_data:
  postgres_data:
  sqlserver_data:
